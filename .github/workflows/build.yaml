on:
  workflow_call:
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true
    inputs:
      service:
        description: The service to build
        type: string
        required: true
      push:
        description: Push to Registry
        type: boolean
        required: false
        default: false
      dockerfile:
        description: Path to Dockerfile
        type: string
        required: true
      repository:
        description: repository name
        type: string
        required: true

jobs:
  scan:
    name: Scan ${{ inputs.service }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run kics scan
        uses: Checkmarx/kics-github-action@v1.7.0
        with:
          path: ${{ inputs.dockerfile }}
          token: ${{ secrets.GITHUB_TOKEN }}
          output_path: /scan_results/${{ inputs.service }}
          ignore_on_exit: results
          enable_comments: true
          enable_annotations: 'true'
          enable_jobs_summary: 'true'

  # Build and push Docker image
  build:
    name: Build and Push ${{ inputs.service }}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: xblaz3kx/chargex_${{ inputs.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: go-build-cache
          key: "${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}"

      - name: Inject go-build-cache into docker
        # v1 was composed of two actions: "inject" and "extract".
        # v2 is unified to a single action.
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-source: go-build-cache
          cache-map: ''

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push ${{ inputs.service }} image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          file: ${{ inputs.dockerfile }}
          push: ${{ inputs.push }} # Don't push on PR
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,compression=zstd
