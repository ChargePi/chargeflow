name: "Autogen"
on:
  push:
    paths:
      - '**/*.go'
      - '.mockery.yaml'
    branches:
      - master
      - main

  pull_request:
    types: [ opened, synchronize ]
    branches:
      - master
      - main

  workflow_dispatch:

jobs:
  generate_openapi_spec:
    name: "Generate OpenAPI specification"
    runs-on: ubuntu-latest

    # Permissions are needed to push the changes back to the repository
    permissions:
      contents: write
      pull-requests: write

    if: github.path == 'internal/api/http/**'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install go-swagger
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with: # Grab a specific tag
          repo: go-swagger/go-swagger
          tag: v0.31.0

      - name: Add latest version of wget
        run: |
          apk add wget

      - name: Generate OpenAPI specification
        run: |
          make gen-spec

      - name: Validate the specification
        uses: char0n/swagger-editor-validate@v1.4.0
        with:
          definition-file: ./api/openapi.yaml

      - name: Push the specification
        if: github.event_name == 'pull_request' # Only push if this is a PR
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "[autogen] Generated OpenAPI specification"

      - name: Create a PR with the generated code
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[autogen] OpenAPI spec update"
          title: "[gen] Upserted OpenAPI spec"
          body: "New OpenAPI specification generated"
          branch: "feat/gen-openapi-spec-${{ github.sha }}"
          base: main
          labels: api, docs, autogen


  mocks:
    name: Generate mocks
    runs-on: ubuntu-latest

    # Permissions are needed to push the changes back to the repository
    permissions:
      contents: write
      pull-requests: write

    if: (github.path == '**/*.go' || github.path == '.mockery.yaml')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.0

      - name: Install Mockery
        uses: jaxxstorm/action-install-gh-release@v2.1.0
        with: # Grab a specific tag
          repo: vektra/mockery
          tag: v2.51.0

      - name: Generate mocks
        run: mockery

      - name: Push the generated code
        uses: stefanzweifel/git-auto-commit-action@v5
        if: github.event_name == 'pull_request' # Only push if this is a PR
        with:
          commit_message: "[autogen] generated mocks"

      - name: Create a PR with the generated code
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[autogen] (re)generated mocks"
          title: "[gen] Upserted mocks"
          body: "Regenerated mocks"
          branch: "feat/gen-mocks-${{ github.sha }}"
          base: main
          labels: mocks, autogen
